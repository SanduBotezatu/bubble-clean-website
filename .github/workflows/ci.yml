name: CI/CD Pipeline

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master, develop ]

jobs:
  # Lint and Type Check
  lint:
    name: Lint & Type Check
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: './cleanexpert-react/package-lock.json'
      
      - name: Install dependencies
        working-directory: ./cleanexpert-react
        run: npm ci
      
      - name: Run ESLint
        working-directory: ./cleanexpert-react
        run: npm run lint
      
      - name: TypeScript Check
        working-directory: ./cleanexpert-react
        run: npx tsc --noEmit

  # Build
  build:
    name: Build
    runs-on: ubuntu-latest
    needs: lint
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: './cleanexpert-react/package-lock.json'
      
      - name: Install dependencies
        working-directory: ./cleanexpert-react
        run: npm ci
      
      - name: Build application
        working-directory: ./cleanexpert-react
        run: npm run build
      
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-output
          path: ./cleanexpert-react/.next
          retention-days: 7

  # Security Audit
  security:
    name: Security Audit
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
      
      - name: Run npm audit
        working-directory: ./cleanexpert-react
        run: npm audit --audit-level=moderate
        continue-on-error: true

  # Deploy to Production (only on main/master)
  deploy:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: [lint, build]
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-output
          path: ./cleanexpert-react/.next
      
      # Uncomment and configure for your deployment platform
      # - name: Deploy to Vercel
      #   uses: amondnet/vercel-action@v25
      #   with:
      #     vercel-token: ${{ secrets.VERCEL_TOKEN }}
      #     vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
      #     vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
      #     working-directory: ./cleanexpert-react
      
      - name: Deployment Success
        run: echo "âœ… Deployment completed successfully!"

